Initial compile command 
    emcc -s WASM=1 -s TOTAL_MEMORY=128MB -o gifplayer.html example/gifplayer/gifplayer.c 

Need to go and change gifplayer.change 
    Comment out main 
    Comment out read_stdin 
    Add 
        const char* read_buffer(uint8_t *buf, size_t len) {
            src_buffer = buf;
            src_len = len;
            return NULL;
        }
    Need to change buffer from reading from stdin to use a passed buffer pointer 
        Replace 
            uint8_t src_buffer[SRC_BUFFER_SIZE] = {0};
        With 
            uint8_t *src_buffer;
    Add a read_buffer method (though I think a better name is load_buffer):
        const char* read_buffer(uint8_t *buf, size_t len) {
            src_buffer = buf;
            src_len = len;
            return NULL;
        }
    
        

Now we compile, exposing our needed functions 
    emcc -s WASM=1 -s TOTAL_MEMORY=128MB \
        -s EXPORTED_FUNCTIONS="['_read_buffer','_play']" \
        -o gifplayer.html \
        example/gifplayer/gifplayer.c 

Now we set up our input on the JS side (or in dev console): 
    const testGifB64 = "";
        Input gif in string format 
    const buf = Uint8Array.from(atob(testGifB64), (c) => c.charCodeAt(0));
        Create Uint8 array 
    const at = Module._malloc(buf.length);
        Allocate the memory in wasm and get pointer to memory 
    Module.HEAP8.set(buf, at);

    Module._read_buffer(at, buf.length);
    Module._play();

Replace the timer code ifdef_ posixtimers block  & the fwrite(printbuf.ptr with 
     EM_ASM_({
      onframe($0, $1, $2);
    }, src_buffer, n, cumulative_delay_micros);

include #include <emscripten.h> at top 

